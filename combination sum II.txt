problem link:https://leetcode.com/problems/combination-sum-ii/


class Solution {
public:
    void helper(vector<vector<int>> &res,vector<int>& candidates,vector<int> &combination,int pos,int target){
        if(!target){
            res.emplace_back(combination);
        }
        for(int i = pos; i < candidates.size() && target >= candidates[i]; i++){
            if(i > pos && candidates[i] == candidates[i-1]) continue;
            combination.emplace_back(candidates[i]);
            helper(res,candidates,combination,i + 1,target - candidates[i]);
            combination.pop_back();
        }
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> res;
        vector<int> combination;
        helper(res,candidates,combination,0,target);
        return res;
    }
};